`timescale 1ns / 1ps
module Snake_Control(
 				input    					  	  CLK,
				input    					  	  RESET,
				input    					  	  BINC_flag,
				input    	 [1:0]				  Navigation_State,
				input    	 [1:0]				  MSM_State,
				input	  	  wire    [18:0]	  VGA_Address,
				output        reg      			  Reached_Target,
				input         wire    [14:0]       Random_Target_Address,
				output        wire    [14:0]       Block_Address1,
				output        wire    [14:0]       Block_Address2,
				output        wire    [14:0]       Block_Address3,
				output        wire    [14:0]       Block_Address4,
				output        reg    [2:0]        Object,
				output		  reg    [7:0]		  game_Score,  
				output  	  reg        	 	  Hit_wall_sig,//æ’žå¢™ä¿¡å?·
				output  	  reg        	 	  Hit_body_sig,//æ’žåˆ°è‡ªå·±çš„èº«ä½“ä¿¡å?·
				output  	  reg        	 	  Hit_block_sig////æ’žåˆ°éšœç¢?ç‰©				
				
				
					);

parameter   SnakeLength	=50;
parameter       IDLE   	 		=			2'b00;
parameter       PLAY		   	=			2'b01;
parameter       WIN			   	=			2'b10;
parameter       FAIL			=			2'b11;


parameter        Up 						= 						2'b00;
parameter        Down 						= 						2'b01;
parameter        Left 						= 						2'b10;
parameter        Right 						= 						2'b11;

parameter  		TIME_1S		 	 =     32'd29_999_999;
reg             [31:0]        	refresh_time_cnt=TIME_1S;
//parameter  		TIME_1S		 	 =     32'd9;


//****************éšœç¢?ç‰©å??æ ‡
parameter    	 block1_x=8'd28;
parameter    	 block1_y=7'd11;



parameter    	 block2_x=8'd40;
parameter    	 block2_y=7'd15;




parameter    	 block3_x=8'd55;
parameter    	 block3_y=7'd33;



parameter    	 block4_x=8'd60;
parameter    	 block4_y=7'd60;


parameter         NONE = 3'b000;
parameter         HEAD = 3'b001;
parameter         BODY = 3'b010;
parameter         WALL = 3'b011;
parameter         BLOCK=3'b100;  
					

reg  	[7:0]   SnakeState_X [0:SnakeLength-1];				
reg  	[6:0]   SnakeState_Y [0:SnakeLength-1];				
reg		[29:0]	Counter=30'd0;				
reg		[SnakeLength-1:0]   Snake_light_sig; 
reg		[SnakeLength-2:0]   Search_body_num='d0; 


reg     [3:0]				Block_light_sig=4'd0;

assign Block_Address1={block1_x,block1_y};
assign Block_Address2={block1_x,block1_y};
assign Block_Address3={block1_x,block1_y};
assign Block_Address4={block1_x,block1_y};

reg     [6:0]   Body_num=7'd1;
genvar   PixNo;
generate
for(PixNo=0;PixNo<SnakeLength-1;PixNo=PixNo+1)//////////è¿™
 begin:PixShift
   always@(posedge CLK)begin
     if(RESET) begin
	  SnakeState_X[PixNo+1]<=79;   ////ç»™ä¸€ä¸ªè›‡å¤´çš„ä½?ç½®
	  SnakeState_Y[PixNo+1]<=100;  ////ç»™ä¸€ä¸ªè›‡å¤´çš„ä½?ç½®
	 end
	 else if(Counter==0) begin
	  SnakeState_X[PixNo+1]<=SnakeState_X[PixNo];////// å½“å®šæ—¶åˆ°æ—¶ï¼Œæˆ‘ä»¬ä¸ºäº†å¾—åˆ°ä¸€ä¸ªè›‡å†?ç§»åŠ¨çš„æ•ˆæžœï¼Œå°±æ˜¯å°†ä»–ä»¬çš„å??æ ‡æ›´æ–°ï¼Œå°±æ˜¯å‰?ä¸€ä¸ªå??æ ‡ç»™å®ƒå?Žä¸€ä¸ªè›‡èº«çš„å??æ ‡ï¼Œçœ‹åˆ°çš„æ•ˆæžœå°±æ˜¯ç§»åŠ¨çš„äº†
	  SnakeState_Y[PixNo+1]<=SnakeState_Y[PixNo];//////	å½“å®šæ—¶åˆ°æ—¶ï¼Œæˆ‘ä»¬ä¸ºäº†å¾—åˆ°ä¸€ä¸ªè›‡å†?ç§»åŠ¨çš„æ•ˆæžœï¼Œå°±æ˜¯å°†ä»–ä»¬çš„å??æ ‡æ›´æ–°ï¼Œå°±æ˜¯å‰?ä¸€ä¸ªå??æ ‡ç»™å®ƒå?Žä¸€ä¸ªè›‡èº«çš„å??æ ‡ï¼Œçœ‹åˆ°çš„æ•ˆæžœå°±æ˜¯ç§»åŠ¨çš„äº† 
	 end
   end
 end 
 endgenerate
					

////////////////////////////////////////////////////////////////////
///è›‡å¤´å??æ ‡æŽ§åˆ¶
////////////////////////////////////////////////////////////////////
always@(posedge CLK)begin
 if(RESET)begin
 SnakeState_X[0]<=80;
 SnakeState_Y[0]<=100;
 Hit_wall_sig<=1'b0;
  Hit_block_sig<=1'b0;
 end
 else if(Counter==0)begin////////å®šæ—¶åˆ°äº†æ‰?åˆ¤æ–­
 case(MSM_State)
   IDLE:
          begin
			 SnakeState_X[0]<=80;
			 SnakeState_Y[0]<=100;	
			 Hit_wall_sig<=1'b0;
			Hit_block_sig<=1'b0;			 
		  end
   PLAY:
         begin 
           if((SnakeState_Y[0]==block1_y)&&(SnakeState_X[0]==block1_x)&&(Block_light_sig[0]==1'b1))	//////å½“å?‘çŽ°è›‡å¤´çš„å??æ ‡å’Œæˆ‘ä»¬è›‡çš„éšœç¢?ç‰©çš„å??æ ‡ä¸€è‡´ï¼Œé‚£ä¹ˆå°±æ˜¯æ’žä¸Šéšœç¢?ç‰©äº†ï¼Œè¿™ä¸ªæ—¶å€™å°±ç»™å‡ºè£…ä¸Šéšœç¢?ç‰©çš„æ ‡å‡†ä¿¡å?·
			Hit_block_sig<=1'b1;	
		   else if((SnakeState_Y[0]==block2_y)&&(SnakeState_X[0]==block2_x)&&(Block_light_sig[1]==1'b1))////å?Œä¸Š	
            Hit_block_sig<=1'b1;
		   else if((SnakeState_Y[0]==block3_y)&&(SnakeState_X[0]==block3_x)&&(Block_light_sig[2]==1'b1))////å?Œä¸Š		
            Hit_block_sig<=1'b1;
		   else if((SnakeState_Y[0]==block4_y)&&(SnakeState_X[0]==block4_x)&&(Block_light_sig[3]==1'b1))	////å?Œä¸Š	
            Hit_block_sig<=1'b1;			
           else			
			case(Navigation_State)
								Up:
									begin
									if(SnakeState_Y[0] == 7'd1)//å¦‚æžœç¬¬ä¸€ä¸ªç§»åŠ¨çš„èŠ‚å??æ ‡å·²ç»?æ˜¯1äº†ï¼Œå†?æŒ‰ä¸Šï¼Œåˆ™ä¼šæ’žå¢™
											Hit_wall_sig <= 1'd1;
										else
											SnakeState_Y[0] <= SnakeState_Y[0] - 7'd1;//æ³¨æ„?å??æ ‡ç³»ï¼Œè¿™é‡Œæ˜¯ - 1ï¼Œå› ä¸ºæœ€ä¸Šé?¢æ˜¯0ï¼Œæ‰€ä»¥å?‘ä¸Šèµ°çš„è¯?ï¼ŒYæ˜¯ - 1çš„ã€‚
									end
								
								Down:
									begin
										if(SnakeState_Y[0] == 7'd118)/////è£…ä¸Šä¸‹è¾¹çš„å¢™äº†
											Hit_wall_sig <= 1'd1;
										else
											SnakeState_Y[0] <= SnakeState_Y[0] + 7'd1;//////å¦‚æžœä¸?ä¼šï¼Œé‚£å°±çºµå??æ ‡åŠ 1
									end
								Left:
									begin
										if(SnakeState_X[0] == 8'd1)
											Hit_wall_sig <= 1'd1;
										else
											SnakeState_X[0] <= SnakeState_X[0] - 8'd1;//æ³¨æ„?å??æ ‡ç³»ï¼Œè¿™é‡Œæ˜¯ + 1ï¼Œå› ä¸ºæœ€å·¦é?¢æ˜¯0ï¼Œæ‰€ä»¥å?‘å·¦èµ°çš„è¯?ï¼ŒXæ˜¯ - 1çš„ã€‚	
									end
								
								Right:
									begin
										if(SnakeState_X[0] == 8'd159)
											Hit_wall_sig <= 1'd1;
										else
											SnakeState_X[0] <= SnakeState_X[0] + 8'd1;
									end
								default:;	
							endcase				
			
         end		 
   WIN:
          begin
			 SnakeState_X[0]<=80; /////è¿›å…¥èµ¢çš„çŠ¶æ€?ï¼Œå??æ ‡å°±ä¸?å†?æ›´æ–°äº†
			 SnakeState_Y[0]<=100;/////è¿›å…¥èµ¢çš„çŠ¶æ€?ï¼Œå??æ ‡å°±ä¸?å†?æ›´æ–°äº†
			 Hit_wall_sig<=1'b0;  /////è¿›å…¥èµ¢çš„çŠ¶æ€?ï¼Œå??æ ‡å°±ä¸?å†?æ›´æ–°äº†
			 Hit_block_sig<=1'b0; /////è¿›å…¥èµ¢çš„çŠ¶æ€?ï¼Œå??æ ‡å°±ä¸?å†?æ›´æ–°äº†
		  end
   FAIL:
          begin
			 SnakeState_X[0]<=80;
			 SnakeState_Y[0]<=100;	
			 Hit_wall_sig<=1'b0;
			 Hit_block_sig<=1'b0;				 
		  end		  
default:;	
endcase
end					
end


/////////////////////////////////////////////////////
///å?ƒè›‡å¤´é€»è¾‘
////////////////////////////////////////////////////
always@(posedge CLK)begin
  if(RESET)begin
  Reached_Target<=1'b0;
  end
  else if(Counter==0) begin
  if((Random_Target_Address[14:7]==SnakeState_X[0])&&(Random_Target_Address[6:0]==SnakeState_Y[0]))/////å½“è‹¹æžœçš„çš„ä½?ç½®å’Œè›‡å¤´çš„ä½?ç½®ä¸€æ ·æ—¶ï¼Œä»£è¡¨å?ƒä¸Šè‹¹æžœäº†ï¼Œç»™å‡ºå¯¹åº”çš„æ ‡å¿—ä¿¡å?·
   Reached_Target<=1'b1;
  else
    Reached_Target<=1'b0;
  end	
  else
  Reached_Target<=1'b0;  
end

always@(posedge CLK)begin
  if(RESET)
	game_Score<=8'h0;
  else if((MSM_State==PLAY)&&(Reached_Target==1'b1))begin//////å½“ç³»ç»Ÿå†?æ­£å¸¸çš„æ¸¸æˆ?æ—¶ï¼Œå?ˆå?‘çŽ°è›‡å¤´å?ƒä¸Šè‹¹æžœäº†ï¼Œé‚£ä¹ˆæˆ‘ä»¬çš„å¾—åˆ†å°±åŠ ä¸€ï¼Œæ˜¾ç¤ºåœ¨æ•°ç ?ç®¡ä¸Š
		if(game_Score[3:0]==4'd9)
			 if(game_Score[7:4]==4'd9)
					game_Score<=8'd0;
				 else
				 begin
				 game_Score[7:4]<=game_Score[7:4]+1'b1;//////è¿™é‡Œæˆ‘ä»¬ä¸ºäº†ä¸¤ä¸ªæ•°ç ?ç®¡æ˜¾ç¤ºåˆ†æ•°ï¼Œæ‰€ä»¥æˆ‘ä»¬æŠŠ8bitçš„ä¿¡å?·æ‹†åˆ†ï¼Œé«˜4ä½?è¡¨ç¤ºå??ä½?ï¼Œä½Ž4ä½?è¡¨ç¤ºå?„ä½?
				 game_Score[3:0]<=4'd0;
				 end
			else
	         game_Score[3:0]<= game_Score[3:0]+1'b1;		   
		end
  else if(MSM_State!=PLAY)///////ä¸?å†?æ¸¸æˆ?çŠ¶æ€?ï¼Œé‚£ä¹ˆåˆ†æ•°å°±æ¸…0å¤„ç?†äº†
    game_Score <=8'h0;
end


always@(posedge  CLK)begin
  if(RESET) begin
	Block_light_sig<=4'd0;
  end
  else if((Reached_Target==1'b1)&&(game_Score==8'h01)&&(MSM_State==PLAY))///////è¿™ä¸ªæ˜¯éšœç¢?ç‰©æˆ‘ä»¬ä¸?æ˜¯ä¸€ä¸Šæ?¥å°±ç»™4ä¸ªéšœç¢?ç‰©äº†ï¼Œè€Œæ˜¯å†?æ¸¸æˆ?çš„è¿‡ç¨‹ä¸­ï¼Œå¾—åˆ†åˆ°äº†ä¸€å®šçš„æ—¶åˆ»ï¼ŒæŒ¨ä¸ªé€’å¢žéšœç¢?ç‰©çš„
    Block_light_sig<=4'h1;                        
  else if((Reached_Target==1'b1)&&(game_Score==8'h04)&&(MSM_State==PLAY))
    Block_light_sig<=4'h3;                         
  else if((Reached_Target==1'b1)&&(game_Score==8'h10)&&(MSM_State==PLAY))
    Block_light_sig<=4'h7; 	                       
  else if((Reached_Target==1'b1)&&(game_Score==8'h13)&&(MSM_State==PLAY))
    Block_light_sig<=4'hf; 	
  else if(MSM_State!=PLAY)
	Block_light_sig<=4'h0; 	  
  else
    Block_light_sig<=Block_light_sig; 	  
end






/////////////////////////////////////////////////////////
//è›‡èº«ç‚¹äº®æŽ§åˆ¶
////////////////////////////////////////////////////////
always@(posedge CLK)begin
if(RESET) begin
   Snake_light_sig<='d1;
   Body_num<=7'd1;
   end
 else 
   if(MSM_State!=PLAY)begin
   Snake_light_sig<='d1;
   Body_num<=7'd1;   
   end
   else if(MSM_State==PLAY) begin
   if(Reached_Target==1'b1)begin/////////æ¯?æ¬¡è›‡å¤´å?ƒä¸Šè‹¹æžœäº†ï¼Œè›‡èº«æ‰?ä¼šå?˜é•¿
   Snake_light_sig[Body_num]<=1'b1;
   Body_num<=Body_num+1'b1;
   end
   else begin
   Snake_light_sig<=Snake_light_sig;
   Body_num<=Body_num;
   end
   end
end

//////////////////////////////////////////////////////////////////////////////
///åˆ·æ–°é€Ÿåº¦æŽ§åˆ¶
//////////////////////////////////////////////////////////////////////////////
always@(posedge CLK)begin
  if(RESET)
     refresh_time_cnt<=TIME_1S;
  else if((Reached_Target==1'b1)&&(MSM_State==PLAY))
     refresh_time_cnt<=refresh_time_cnt-1000000;//////æ¯?æ¬¡å¿«20ms   è¿™ä¸ªæ˜¯æŽ§åˆ¶è›‡çš„ç§»åŠ¨é€Ÿåº¦ï¼Œæ¯?æ¬¡å?ƒä¸Šä¸€ä¸ªè‹¹æžœï¼Œæˆ‘ä»¬åˆ·æ–°çš„æ—¶é—´å°±å?˜å¿«20ms
  else if(MSM_State!=PLAY)	
	 refresh_time_cnt<=TIME_1S;  
end

reg    Pause_flag=1'b0;

always@(posedge CLK)begin
  if(RESET) begin
    Pause_flag<=1'b0;
  end
  else if(BINC_flag==1'b1)///////æˆ‘ä»¬å?šäº†ä¸€ä¸ªæ¸¸æˆ?æš‚å?œçš„åŠŸèƒ½ï¼Œå°±æ˜¯é€šè¿‡æŒ‰ä¸‹ä¸­é—´çš„æŒ‰é”®ï¼Œæ¸¸æˆ?å°±ä¼šè¿›å…¥æš‚å?œæ¨¡å¼?
    Pause_flag<=!Pause_flag;
  else
    Pause_flag<=Pause_flag;  
end

always@(posedge CLK)begin
   if(RESET)
	Counter<=30'd0;
   else if((Counter>=refresh_time_cnt))	
   Counter<=30'd0;
   else if(Pause_flag==1'b0)//////å?ªæœ‰æ¸¸æˆ?ä¸?æ˜¯æš‚å?œæ¨¡å¼?ï¼Œæ‰?ä¼šå?¯åŠ¨åˆ·æ–°ã€‚ä¸?ç„¶è›‡çš„èº«ä½“å°±ä¸?å?‘ç”Ÿç§»åŠ¨
   Counter<=Counter+1'b1;
   else
   Counter<=Counter;
end
//////////////////////////////////////////////////////////////////////////////
///ç›®æ ‡è¾“å‡ºæ˜¾ç¤º
//////////////////////////////////////////////////////////////////////////////

generate
for(PixNo=1;PixNo<SnakeLength-1;PixNo=PixNo+1)
 begin:BodyShift
   always@(posedge CLK)begin
			if(RESET)
			Search_body_num[PixNo-1]<=1'b0;
            else if((VGA_Address[18:11]==SnakeState_X[PixNo])&&(VGA_Address[8:2]==SnakeState_Y[PixNo])&&(Snake_light_sig[PixNo]==1'b1)) 	
            Search_body_num[PixNo-1]<=1'b1;////////å½“VGAçš„æ—¶åº?æ‰«æ??åˆ°è›‡çš„ä½?ç½®ï¼Œæˆ‘ä»¬å½“å‰?å°±çŸ¥é?“è¦?æŠŠè›‡ç”»å‡ºæ?¥ï¼Œç»™å‡ºå¯¹åº”çš„æ ‡å¿—
            else 
            Search_body_num[PixNo-1]<=1'b0;			
	   end
 end 
endgenerate
 
////////è¿™ä¸ªæ¨¡å?—ä¸»è¦?åˆ¤æ–­å½“å‰?æ—¶åˆ»åº”è¯¥æ˜¾ç¤ºçš„æ˜¯å“ªä¸ªéƒ¨ä½?ï¼Œéƒ½æ˜¯é€šè¿‡å??æ ‡åˆ¤æ–­çš„ 
always@(VGA_Address or Snake_light_sig)begin
       if((VGA_Address[18:9]>=0)&&(VGA_Address[18:9]<640)&&(VGA_Address[8:0]>=0)&&(VGA_Address[8:0]<480))begin
	       if((VGA_Address[18:11]==8'd0)|(VGA_Address[18:11]==8'd159)|(VGA_Address[8:2]==7'd0)|(VGA_Address[8:2]==7'd119))
	         Object = WALL;//æ‰«æ??å¯¹è±¡æ˜¯å¢™
			else if((VGA_Address[18:11]==SnakeState_X[0])&&(VGA_Address[8:2]==SnakeState_Y[0])&&(Snake_light_sig[0]==1'b1)) 
	        Object = HEAD;//æ‰«æ??å¯¹è±¡æ˜¯è›‡å¤´
            else if((VGA_Address[18:11]==block1_x)&&(VGA_Address[8:2]==block1_y)&&(Block_light_sig[0]==1'b1)) 	
            Object = BLOCK;//æ‰«æ??å¯¹è±¡æ˜¯éšœç¢?ç‰©
            else if((VGA_Address[18:11]==block2_x)&&(VGA_Address[8:2]==block2_y)&&(Block_light_sig[1]==1'b1)) 	
            Object = BLOCK;//æ‰«æ??å¯¹è±¡æ˜¯éšœç¢?ç‰©
            else if((VGA_Address[18:11]==block3_x)&&(VGA_Address[8:2]==block3_y)&&(Block_light_sig[2]==1'b1)) 	
            Object = BLOCK;//æ‰«æ??å¯¹è±¡æ˜¯éšœç¢?ç‰©
            else if((VGA_Address[18:11]==block4_x)&&(VGA_Address[8:2]==block4_y)&&(Block_light_sig[3]==1'b1)) 	
            Object = BLOCK;	//æ‰«æ??å¯¹è±¡æ˜¯éšœç¢?ç‰©		
            else if(Search_body_num!=0) begin
			Object = BODY;	//æ‰«æ??å¯¹è±¡æ˜¯è›‡èº«
             end			
           	else 
			Object = NONE;//////æ‰«æ??å¯¹è±¡æ˜¯èƒŒæ™¯			
	   end
	   else
	   Object = NONE;
end  
  
endmodule
